'use client';

import { Recommendation } from '@/services/api';
import { AlertTriangle, Info, CheckCircle, Lightbulb } from 'lucide-react';

interface RecommendationsPanelProps {
  recommendations: Recommendation[];
}

export default function RecommendationsPanel({ recommendations }: RecommendationsPanelProps) {
  const getPriorityIcon = (priority: string) => {
    switch (priority) {
      case 'high':
        return <AlertTriangle className="w-5 h-5 text-red-600" />;
      case 'medium':
        return <Info className="w-5 h-5 text-yellow-600" />;
      case 'low':
        return <CheckCircle className="w-5 h-5 text-green-600" />;
      default:
        return <Lightbulb className="w-5 h-5 text-blue-600" />;
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high':
        return 'border-red-200 bg-red-50';
      case 'medium':
        return 'border-yellow-200 bg-yellow-50';
      case 'low':
        return 'border-green-200 bg-green-50';
      default:
        return 'border-blue-200 bg-blue-50';
    }
  };

  if (recommendations.length === 0) {
    return (
      <div className="text-center py-8">
        <CheckCircle className="w-16 h-16 text-green-600 mx-auto mb-4" />
        <h3 className="text-lg font-medium text-gray-900 mb-2">No Specific Recommendations</h3>
        <p className="text-gray-600">Your portfolio looks well-balanced! Continue monitoring and rebalancing regularly.</p>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-900">AI Recommendations</h3>
        <span className="text-sm text-gray-500">{recommendations.length} insights</span>
      </div>

      <div className="space-y-4">
        {recommendations.map((rec, index) => (
          <div
            key={index}
            className={`rounded-lg border-2 p-6 ${getPriorityColor(rec.priority)}`}
          >
            <div className="flex items-start space-x-3">
              <div className="flex-shrink-0">
                {getPriorityIcon(rec.priority)}
              </div>
              <div className="flex-1">
                <div className="flex items-center justify-between mb-2">
                  <h4 className="text-lg font-medium text-gray-900">{rec.title}</h4>
                  <div className="flex items-center space-x-2">
                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium capitalize ${
                      rec.priority === 'high'
                        ? 'bg-red-100 text-red-800'
                        : rec.priority === 'medium'
                        ? 'bg-yellow-100 text-yellow-800'
                        : 'bg-green-100 text-green-800'
                    }`}>
                      {rec.priority} priority
                    </span>
                    <span className="text-xs text-gray-500">
                      {rec.confidence ? (rec.confidence * 100).toFixed(0) : '0'}% confidence
                    </span>
                  </div>
                </div>
                
                <p className="text-gray-700 mb-4">{rec.description}</p>
                
                <div>
                  <h5 className="text-sm font-medium text-gray-900 mb-2">Recommended Actions:</h5>
                  <ul className="space-y-1">
                    {rec.actions.map((action, actionIndex) => (
                      <li key={actionIndex} className="flex items-start space-x-2">
                        <span className="text-gray-400 text-sm mt-1">â€¢</span>
                        <span className="text-sm text-gray-700">{action}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                {rec.source && (
                  <div className="mt-3 text-xs text-gray-500">
                    Source: {rec.source}
                  </div>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>

      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-center space-x-2">
          <Lightbulb className="w-5 h-5 text-blue-600" />
          <h4 className="text-sm font-medium text-blue-900">AI Analysis Note</h4>
        </div>
        <p className="text-sm text-blue-700 mt-1">
          These recommendations are generated by AI analysis of your portfolio composition, 
          market conditions, and risk factors. Always consult with a financial advisor 
          before making investment decisions.
        </p>
      </div>
    </div>
  );
}
